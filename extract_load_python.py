# -*- coding: utf-8 -*-
"""Extract Load Python

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16BDmZiM5KCMCrnYptJnHMdwbKaA6-4q5
"""

from sqlalchemy import create_engine
import pyodbc
import pandas as pd
import sqlalchemy
import osvid =


#get password from environment var
pwd = os.environ['PGPASS']
uid = os.environ['PGUID']

#sql db details
driver = "{SQL Server Native Client 11.0}"
server = "haq-PC"
database = "AdventureWorksDW2019"

#exctract data from sql server
def extract():
  try:
    src_conn = pyodbc.connect("Driver=" +DRIVER + ";Server=" +server + "\SQLEXPRESS"+ ";Database=" + database +"UID=" + uid+ ";PWD=" +pwd)
    src_cursor = src_conn.cursor()
    #EXECUTE QUERY
    src_cursor.execute = """ select  t.name as table_name
        from sys.tables t where t.name in ('DimProduct','DimProductSubcategory','DimProductSubcategory','DimProductCategory','DimSalesTerritory','FactInternetSales') """
        src_tables = pd.read_sql_query(query, src_conn).to_dict()['table_name']

    for id in src_tables:
            table_name = src_tables[id]
            df = pd.read_sql_query(f'select * FROM {table_name}', src_conn)
            load(df, table_name)

    except Exception as e:
        print("Data extract error: " + str(e))
    finally:
      src_conn.close()

#load data to postgres
def load(df, tbl):
    try:
        rows_imported = 0
        engine = create_engine(f'postgresql://{uid}:{pwd}@{server}:5432/adventureworks')
        print(f'importing rows {rows_imported} to {rows_imported + len(df)}... for table {tbl}')
        # save df to postgres
        df.to_sql(f'stg_{tbl}', engine, if_exists='replace', index=False)
        rows_imported += len(df)
        # add elapsed time to final print out
        print("Data imported successful")
    except Exception as e:
        print("Data load error: " + str(e))

try:
    #call extract function
    extract()
except Exception as e:
    print("Error while extracting data: " + str(e))