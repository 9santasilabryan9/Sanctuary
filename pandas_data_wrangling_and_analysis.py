# -*- coding: utf-8 -*-
"""Pandas Data Wrangling and Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zvROEixPmITJ_Bq7LsS0Jlp21NUFeaSB
"""

import pandas as pd
import sys
print(sys.version)

df = pd.read_parquet() #read file

pd.set_option('display.max_columns', 500)
df.head()
df.tail()

df.columns() #columns
df.index() #rows

df.info()
df.info(verbose = False) # quicker

df.shape()

df.sample(500, random_state = 1)

df.describe().T #indferential statistic
df[['hello', 'world']] #retreiving only hello and world columns, double [[]] returns data frame
df[df.columns[5:]] #slicing elements to after index 5

df[i for i in df.columns if "Hello" in i] #list comprehension for filetring columns

df.loc[] #pull by name
df.iloc[1,2] #pull by numbers of element order 2nd row and 3rd column

# boolean expressions

df["Hello"] == 'Amy'
df.loc[df["Hello"] == 'Amy'] # return dataframe, note ~ takes the inverse

#Filtering using Query
df.query('(Hello > 10) and (World == Earth)')

#if there is an external variable, can use @ in the expression

#Summarizing Data
df['Hello'].mean()
df['Hello'].min()
df['Hello'].max()
df['Hello'].std() # all of these can take multiple columns
df['Hello'].var()
df['Hello'].sum()
df['Hello'].quantile([0.25, 0.75]) # output is 25th percentile and 75th percentile value

# Combine multiple summarizing Data
df[['Hello', 'World']].agg(['mean', 'min', 'max'])

df[['Hello', 'World']].agg({'Hello':['mean', 'min', 'max'],
                            'World': ['mean']})

#Duplicated
df.unique()
df.nunique() #Gives the number of unique elements

df.value_counts(normalize=True) #count every value of the variables and normalize it to 0-1
df.reset_index() #reset the index from 0 again

#Advance column Methods
df.rank()
df.shift(1) #move the data 1 rows below, can add vill_value = 0 to fill ythe empty column with 0
df.clip(100, 200) # clip the value to only between 100 nad 200, so value below 100 will be 100 nad value abiove 200 will be 200

#Group By Method
df_agg = df.groupby("hello")["name"] # gorup the hello by name
df_agg.columns = ['_'.join(i) for i in df_agg.columns]

#New Columns
df.assign(hello = df['Hello']/2) # make new colum hello from Hello after divide by 2
df.sort_value('hello', ascending= False) # sort the value
df.sort() #sort by name order alphabet
df.sort_index() #sort by index if numeric

#handle Missing Value
df.isna().sum() #check missing data
df.dropna(subset=['Hello']) #Drop only the column that has na value in Hello

df.fill_na(0) # replace the na value with 0
df.fill_na(df['Hello'.mean()]) #replace the na value with the mean of Hello





